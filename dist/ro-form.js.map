{"version":3,"sources":["../src/components/Form.jsx","../src/components/FormControl.jsx","../src/index.js"],"names":[],"mappings":"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","file":"ro-form.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends Component {\n  static propTypes = {\n    value: PropTypes.object,\n    onChange: PropTypes.func,\n    onSubmit: PropTypes.func,\n    name: PropTypes.string,\n  };\n\n  static defaultProps = {\n    value: {},\n    onChange: () => {},\n    name: '_RoForm',\n  };\n\n  static childContextTypes = {\n    formData: PropTypes.object.isRequired,\n    onFormDataChange: PropTypes.object.isRequired,\n  };\n\n  static contextTypes = {\n    formData: PropTypes.object,\n    onFormDataChange: PropTypes.object,\n  };\n\n  getChildContext() {\n    let { formData, onFormDataChange } = this.context;\n    const { name } = this.props;\n    formData = formData || {};\n    onFormDataChange = onFormDataChange || {};\n    return {\n      formData: { ...formData, [name]: this.props.value },\n      onFormDataChange: { ...onFormDataChange, [name]: this._onFormDataChange },\n    };\n  }\n\n  _onFormDataChange = (changes) => {\n    this.props.onChange({ ...this.props.value, ...changes });\n  };\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n    onSubmit();\n  };\n\n  render() {\n    const { children, onSubmit } = this.props;\n\n    if (onSubmit) {\n      return (\n        <form onSubmit={this._handleSubmit}>\n          {children}\n        </form>\n      );\n    } else {\n      return (\n        <div>{children}</div>\n      );\n    }\n  }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport set from 'lodash.set';\nimport get from 'lodash.get';\n\nclass FormControl extends Component {\n  static propTypes = {\n    control: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(Component)]).isRequired,\n    controlProps: PropTypes.object,\n    formName: PropTypes.string,\n\n    // Either provide path prop or onChange+value props, not both.\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n    // Handle onChange manually\n    onChange: PropTypes.func,\n    // Pass value manually\n    value: PropTypes.any,\n  };\n\n  static defaultProps = {\n    controlProps: {},\n    formName: '_RoForm',\n    onChange: null,\n    value: undefined,\n  };\n\n  static contextTypes = {\n    formData: PropTypes.object.isRequired,\n    onFormDataChange: PropTypes.object.isRequired\n  };\n\n  _onChange = (value) => {\n    const { path, formName, onChange } = this.props;\n\n    if (onChange) {\n      onChange(value);\n    } else {\n      let changes = {};\n      set(changes, path, value);\n\n      this.context.onFormDataChange[formName](changes);\n    }\n  };\n\n  _value = () => {\n    const { value, path, formName } = this.props;\n    const { formData } = this.context;\n\n    if (typeof value === 'undefined') {\n      return get(formData[formName], path);\n    } else {\n      return value;\n    }\n  };\n\n  componentWillMount() {\n    const { formData } = this.context;\n    if (!formData) {\n      throw 'FormControl must be a child of Form component';\n    }\n    if (!formData[this.props.formName]) {\n      throw `FormControl is bound to \"${this.props.formName}\" name, but forms found are: ${Object.keys(formData).join(', ')}`;\n    }\n  }\n\n  render() {\n    const { controlProps } = this.props;\n\n    const ControlComponent = this.props.control;\n\n    return <ControlComponent {...controlProps} value={this._value()} onChange={this._onChange} />;\n  }\n}\n\nexport default FormControl;","import Form from './components/Form';\nimport FormControl from './components/FormControl';\n\nexport {\n  Form,\n  FormControl,\n};"]}